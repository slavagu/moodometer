{"version":3,"sources":["components/Loading.js","components/NavBar.js","components/Footer.js","utils/useApi.js","assets/mood.js","views/Home.js","components/TodayChart.js","views/Demo.js","views/Profile.js","components/HistoryChart.js","views/Trend.js","utils/initFontAwesome.js","App.js","serviceWorker.js","utils/auth0ProviderWithHistory.js","index.js","assets/loading.svg"],"names":["Loading","react_default","a","createElement","className","src","loading","alt","labels","MenuLink","_ref","to","onClick","children","NavLink","tag","RouterNavLink","exact","activeClassName","undefined","Menu","isAuthenticated","useAuth0","Nav","navbar","NavItem","NavBar_MenuLink","logoutWithRedirect","logout","returnTo","window","location","origin","UserInfoDesktop","_useAuth2","user","loginWithRedirect","Button","size","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","id","picture","width","DropdownMenu","right","DropdownItem","header","name","index_es","icon","UserInfoMobile","_useAuth3","Fragment","NavBar","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","Navbar","color","dark","expand","Container","NavbarToggler","Collapse","NavBar_Menu","NavBar_UserInfoDesktop","NavBar_UserInfoMobile","Footer","href","useApi","url","_ref$options","options","_ref$data","data","requestData","getAccessTokenSilently","error","isLoading","state","setState","_useState3","_useState4","refreshIndex","setRefreshIndex","callApi","_ref2","asyncToGenerator","regenerator_default","mark","_callee","isPost","accessToken","response","wrap","_context","prev","next","method","toUpperCase","objectSpread","abrupt","body","JSON","stringify","sent","fetch","headers","Authorization","concat","t0","t1","t2","t3","json","t4","t5","t6","t7","stop","apply","this","arguments","useEffect","refresh","assets_mood","question","label","button","Options","onSelect","MOOD","map","o","key","Home","_useAuth","react_router_dom","mood","setMood","_useApi","process","selectMood","moodId","userMood","assign","toConsumableArray","_ref3","defineProperty","_x","components_Loading","message","Home_Options","TodayChart","es","maintainAspectRatio","legend","rotation","datasets","backgroundColor","defaultState","Demo","Demo_Options","components_TodayChart","withAuthenticationRequired","Row","Col","md","email","onRedirecting","HistoryChart","moodHistory","m","date","type","fill","borderColor","scales","yAxes","height","Trend","history","today","components_HistoryChart","library","add","faLink","faUser","faPowerOff","initFontAwesome","App","components_NavBar","react_router","path","component","Profile","from","components_Footer","Boolean","hostname","match","Auth0ProviderWithHistory","useHistory","auth0_react_esm","domain","clientId","audience","redirectUri","onRedirectCallback","appState","push","pathname","ReactDOM","render","auth0ProviderWithHistory","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.71d893a7.chunk.js","sourcesContent":["import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst Loading = () => (\n  <div className=\"center\">\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default Loading;\n","import React, { useState } from 'react'\nimport { NavLink as RouterNavLink } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport {\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap'\n\nconst labels = {\n  Home: 'home',\n  Demo: 'demo',\n  Trend: 'trend',\n  Profile: 'profile',\n  Login: 'log in',\n  Logout: 'log out',\n}\n\nconst MenuLink = ({ to, onClick, children }) => (\n  <NavLink\n    tag={RouterNavLink}\n    to={to || '#'}\n    exact\n    activeClassName=\"router-link-exact-active\"\n    onClick={onClick || undefined}\n  >\n    {children}\n  </NavLink>\n)\n\nconst Menu = () => {\n  const { isAuthenticated } = useAuth0()\n  return (\n    <Nav className=\"mr-auto\" navbar>\n      <NavItem>\n        <MenuLink to=\"/\">{labels.Home}</MenuLink>\n      </NavItem>\n      {!isAuthenticated && (\n        <NavItem>\n          <MenuLink to=\"/demo\">{labels.Demo}</MenuLink>\n        </NavItem>\n      )}\n      {isAuthenticated && (\n        <NavItem>\n          <MenuLink to=\"/trend\">{labels.Trend}</MenuLink>\n        </NavItem>\n      )}\n    </Nav>\n  )\n}\n\nconst logoutWithRedirect = (logout) => {\n  logout({\n    returnTo: window.location.origin,\n  })\n}\n\nconst UserInfoDesktop = () => {\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0()\n  return (\n    <Nav className=\"d-none d-md-block\" navbar>\n      {!isAuthenticated && (\n        <NavItem>\n          <Button\n            size=\"lg\"\n            className=\"btn-margin\"\n            onClick={() => loginWithRedirect()}\n          >\n            {labels.Login}\n          </Button>\n        </NavItem>\n      )}\n      {isAuthenticated && (\n        <UncontrolledDropdown nav inNavbar>\n          <DropdownToggle nav caret id=\"profileDropDown\">\n            <img\n              src={user.picture}\n              alt=\"Profile\"\n              className=\"nav-user-profile rounded-circle\"\n              width=\"50\"\n            />\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem header className=\"text-xl\">\n              {user.name}\n            </DropdownItem>\n            <DropdownItem\n              tag={RouterNavLink}\n              to=\"/profile\"\n              className=\"text-xl\"\n              activeClassName=\"router-link-exact-active\"\n            >\n              <FontAwesomeIcon icon=\"user\" className=\"mr-3\" />\n              {labels.Profile}\n            </DropdownItem>\n            <DropdownItem\n              className=\"text-xl\"\n              onClick={() => logoutWithRedirect(logout)}\n            >\n              <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\n              {labels.Logout}\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </Nav>\n  )\n}\n\nconst UserInfoMobile = () => {\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0()\n  return (\n    <>\n      {!isAuthenticated && (\n        <Nav className=\"d-md-none\" navbar>\n          <NavItem>\n            <Button size=\"lg\" onClick={() => loginWithRedirect()}>\n              {labels.Login}\n            </Button>\n          </NavItem>\n        </Nav>\n      )}\n      {isAuthenticated && (\n        <Nav className=\"d-md-none justify-content-between\" navbar>\n          <NavItem>\n            <img\n              src={user.picture}\n              alt=\"Profile\"\n              className=\"nav-user-profile d-inline-block rounded-circle mr-3\"\n              width=\"50\"\n            />\n            {user.name}\n          </NavItem>\n          <NavItem>\n            <MenuLink to=\"/profile\">\n              <FontAwesomeIcon icon=\"user\" className=\"mr-3\" />\n              {labels.Profile}\n            </MenuLink>\n          </NavItem>\n          <NavItem>\n            <MenuLink onClick={() => logoutWithRedirect(logout)}>\n              <FontAwesomeIcon icon=\"power-off\" className=\"mr-3\" />\n              {labels.Logout}\n            </MenuLink>\n          </NavItem>\n        </Nav>\n      )}\n    </>\n  )\n}\n\nconst NavBar = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggle = () => setIsOpen(!isOpen)\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <Container>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Menu />\n          <UserInfoDesktop />\n          <UserInfoMobile />\n        </Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavBar\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer className=\"text-center\">\n    <p>\n      <a href=\"https://github.com/slavagu/moodometer\">moodometer</a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import { useEffect, useState } from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\nexport const useApi = ({ url, options = {}, data: requestData = null }) => {\r\n  const { getAccessTokenSilently } = useAuth0()\r\n  const [state, setState] = useState({\r\n    error: null,\r\n    isLoading: true,\r\n    data: null,\r\n  })\r\n  const [refreshIndex, setRefreshIndex] = useState(0)\r\n\r\n  const callApi = async () => {\r\n    try {\r\n      const isPost = options.method && options.method.toUpperCase() === 'POST'\r\n      if (isPost && !requestData) {\r\n        setState({\r\n          ...state,\r\n          error: null,\r\n          isLoading: false,\r\n        })\r\n        return\r\n      }\r\n\r\n      if (isPost) {\r\n        options.body = JSON.stringify(requestData)\r\n      }\r\n\r\n      const accessToken = await getAccessTokenSilently()\r\n      const response = await fetch(url, {\r\n        ...options,\r\n        headers: {\r\n          ...options.headers,\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      })\r\n      setState({\r\n        ...state,\r\n        data: await response.json(),\r\n        error: null,\r\n        isLoading: false,\r\n      })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        error,\r\n        isLoading: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    callApi()\r\n  }, [refreshIndex])\r\n\r\n  return {\r\n    ...state,\r\n    refresh: () => setRefreshIndex(refreshIndex + 1),\r\n  }\r\n}\r\n","export default {\r\n  question: 'How do you feel today?',\r\n  options: [\r\n    { id: 'red', label: 'bad', button: 'btn-danger', color: '#dc3545' },\r\n    { id: 'yellow', label: 'normal', button: 'btn-warning', color: '#ffc107' },\r\n    { id: 'green', label: 'great', button: 'btn-success', color: '#28a745' },\r\n  ],\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport { useApi } from '../utils/useApi'\r\nimport Loading from '../components/Loading'\r\nimport MOOD from '../assets/mood'\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nconst Options = ({ onSelect }) => (\r\n  <div>\r\n    {MOOD.options.map((o) => (\r\n      <button\r\n        key={o.id}\r\n        className={`btn ${o.button} btn-xl m-2`}\r\n        onClick={() => onSelect(o.id)}\r\n      >\r\n        {o.label}\r\n      </button>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nconst Home = () => {\r\n  const { isAuthenticated, loginWithRedirect } = useAuth0()\r\n\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div className=\"app-content\">\r\n        <p>\r\n          Use moodometer to capture team mood and see how it changes over time.\r\n        </p>\r\n        {!isAuthenticated && (\r\n          <p>\r\n            Try the <Link to=\"/demo\">demo</Link> or{' '}\r\n            <Link to=\"\" onClick={() => loginWithRedirect()}>\r\n              log in\r\n            </Link>{' '}\r\n            to track your team mood.\r\n          </p>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const [mood, setMood] = useState(null)\r\n\r\n  const { isLoading, error, refresh } = useApi({\r\n    url: `${apiUrl}/mood`,\r\n    options: {\r\n      method: 'POST',\r\n    },\r\n    data: mood,\r\n  })\r\n\r\n  const selectMood = async (moodId) => {\r\n    const userMood = Object.assign(\r\n      {},\r\n      ...MOOD.options.map((o) => ({ [o.id]: 0, [moodId]: 1 }))\r\n    )\r\n    setMood(userMood)\r\n    refresh()\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Oops... {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-content\">\r\n      <p>{MOOD.question}</p>\r\n      <Options onSelect={selectMood} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport MOOD from '../assets/mood'\r\n\r\nconst TodayChart = ({ mood }) => (\r\n  <Doughnut\r\n    options={{ maintainAspectRatio: false, legend: false, rotation: 1.57 }}\r\n    data={{\r\n      labels: MOOD.options.map((o) => o.label),\r\n      datasets: [\r\n        {\r\n          data: mood && MOOD.options.map((o) => mood[o.id]),\r\n          backgroundColor: MOOD.options.map((o) => o.color),\r\n        },\r\n      ],\r\n    }}\r\n  />\r\n)\r\n\r\nexport default TodayChart\r\n","import React, { useState } from 'react'\r\nimport TodayChart from '../components/TodayChart'\r\nimport MOOD from '../assets/mood'\r\n\r\nconst Options = ({ onSelect }) => (\r\n  <div>\r\n    {MOOD.options.map((o) => (\r\n      <button\r\n        key={o.id}\r\n        className={`btn ${o.button} btn-xl m-2`}\r\n        onClick={() => onSelect(o.id)}\r\n      >\r\n        {o.label}\r\n      </button>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nconst defaultState = Object.assign(\r\n  {},\r\n  ...MOOD.options.map((o) => ({ [o.id]: 0 }))\r\n)\r\n\r\nconst Demo = () => {\r\n  const [mood, setMood] = useState(defaultState)\r\n\r\n  const selectMood = async (moodId) => {\r\n    const userMood = { ...mood }\r\n    userMood[moodId]++\r\n    setMood(userMood)\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-content\">\r\n      <p>{MOOD.question}</p>\r\n      <Options onSelect={selectMood} />\r\n      <div className=\"mt-4\">\r\n        <TodayChart mood={mood} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Demo\r\n","import React from 'react'\nimport { Container, Row, Col } from 'reactstrap'\n\nimport Loading from '../components/Loading'\nimport { useAuth0, withAuthenticationRequired } from '@auth0/auth0-react'\n\nexport const Profile = () => {\n  const { user } = useAuth0()\n\n  return (\n    <Container className=\"mb-5\">\n      <Row className=\"align-items-center profile-header mb-5 text-center text-md-left\">\n        <Col md={2}>\n          <img\n            src={user.picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </Col>\n        <Col md>\n          <h2>{user.name}</h2>\n          <p className=\"lead text-muted\">{user.email}</p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <Loading />,\n})\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport MOOD from '../assets/mood'\r\n\r\nconst HistoryChart = ({ moodHistory }) => {\r\n  if (!moodHistory) return null\r\n\r\n  const data = {\r\n    labels: moodHistory.map((m) => m.date),\r\n    datasets: MOOD.options.map((o) => ({\r\n      label: o.label,\r\n      type: 'line',\r\n      data: moodHistory.map((m) => m[o.id]),\r\n      fill: false,\r\n      borderColor: o.color,\r\n      backgroundColor: o.color,\r\n    })),\r\n  }\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: false,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          // stacked: true,\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return <Bar data={data} options={options} height={200} />\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport { useApi } from '../utils/useApi'\r\nimport Loading from '../components/Loading'\r\nimport TodayChart from '../components/TodayChart'\r\nimport HistoryChart from '../components/HistoryChart'\r\n\r\nconst apiUrl = process.env.REACT_APP_API_URL\r\n\r\nconst Trend = () => {\r\n  const { isLoading, error, data } = useApi({ url: `${apiUrl}/history` })\r\n\r\n  const { history, today } = data || {}\r\n\r\n  if (isLoading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Oops... {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-content\">\r\n      <div>\r\n        <TodayChart mood={today} />\r\n      </div>\r\n      <p className=\"text-muted\">today</p>\r\n      <div className=\"h-50\">\r\n        <HistoryChart moodHistory={history} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Trend\r\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLink, faPowerOff, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction initFontAwesome() {\n  library.add(faLink);\n  library.add(faUser);\n  library.add(faPowerOff);\n}\n\nexport default initFontAwesome;\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport './App.css'\r\nimport { Container } from 'reactstrap'\r\nimport Loading from './components/Loading'\r\nimport NavBar from './components/NavBar'\r\nimport Footer from './components/Footer'\r\nimport Home from './views/Home'\r\nimport Demo from './views/Demo'\r\nimport Profile from './views/Profile'\r\nimport Trend from './views/Trend'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\nimport initFontAwesome from './utils/initFontAwesome'\r\n\r\ninitFontAwesome()\r\n\r\nconst App = () => {\r\n  const { isLoading, error } = useAuth0()\r\n\r\n  if (isLoading) {\r\n    return <Loading />\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Oops... {error.message}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <NavBar />\r\n      <Container className=\"flex-grow-1 mt-5\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/demo\" component={Demo} />\r\n          <Route path=\"/trend\" component={Trend} />\r\n          <Route path=\"/profile\" component={Profile} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Auth0Provider } from '@auth0/auth0-react'\r\n\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID\r\nconst audience = process.env.REACT_APP_AUTH0_AUDIENCE\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const history = useHistory()\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(\r\n      appState && appState.returnTo\r\n        ? appState.returnTo\r\n        : window.location.pathname\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      audience={audience}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  )\r\n}\r\n\r\nexport default Auth0ProviderWithHistory\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport Auth0ProviderWithHistory from './utils/auth0ProviderWithHistory'\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}